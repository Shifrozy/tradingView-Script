//@version=6
indicator("Trendline Breakout + MACD Strategy", overlay=true, max_lines_count=500, max_labels_count=500)

// ==================== USER INPUTS ====================
// MACD Settings
macdFastLength = input.int(12, "MACD Fast Length", minval=1, group="MACD Settings")
macdSlowLength = input.int(26, "MACD Slow Length", minval=1, group="MACD Settings")
macdSignalLength = input.int(9, "MACD Signal Length", minval=1, group="MACD Settings")

// Trendline Settings
swingPeriod = input.int(5, "Swing Detection Period", minval=2, maxval=20, group="Trendline Settings")
trendlineLength = input.int(50, "Trendline Extension Length", minval=10, group="Trendline Settings")

// Risk Management
stopLossBuffer = input.float(0.2, "Stop Loss Buffer %", minval=0.1, step=0.1, group="Risk Management")
stopLossLookback = input.int(10, "Stop Loss Lookback Bars", minval=5, group="Risk Management")

// Visual Settings
showTrendlines = input.bool(true, "Show Trendlines", group="Visual Settings")
showMacdOnChart = input.bool(true, "Show MACD on Chart", group="Visual Settings")
showStopLoss = input.bool(true, "Show Stop Loss Levels", group="Visual Settings")

// ==================== MACD CALCULATION ====================
[macdLine, signalLine, histogram] = ta.macd(close, macdFastLength, macdSlowLength, macdSignalLength)
macdBullish = macdLine > signalLine
macdBearish = macdLine < signalLine

// ==================== SWING DETECTION ====================
swingHigh = ta.pivothigh(high, swingPeriod, swingPeriod)
swingLow = ta.pivotlow(low, swingPeriod, swingPeriod)

// Variables to store last two swing points
var float lastHighPrice = na
var int lastHighBar = na
var float prevHighPrice = na
var int prevHighBar = na

var float lastLowPrice = na
var int lastLowBar = na
var float prevLowPrice = na
var int prevLowBar = na

// Update swing highs
if not na(swingHigh)
    prevHighPrice := lastHighPrice
    prevHighBar := lastHighBar
    lastHighPrice := swingHigh
    lastHighBar := bar_index - swingPeriod

// Update swing lows
if not na(swingLow)
    prevLowPrice := lastLowPrice
    prevLowBar := lastLowBar
    lastLowPrice := swingLow
    lastLowBar := bar_index - swingPeriod

// ==================== TRENDLINE CALCULATION ====================
// Calculate resistance (descending) trendline
resistanceSlope = 0.0
resistanceIntercept = 0.0
hasResistance = false

if not na(prevHighPrice) and not na(lastHighPrice) and prevHighBar != lastHighBar
    resistanceSlope := (lastHighPrice - prevHighPrice) / (lastHighBar - prevHighBar)
    resistanceIntercept := prevHighPrice - resistanceSlope * prevHighBar
    hasResistance := resistanceSlope < 0  // Only descending lines for resistance

// Calculate support (ascending) trendline
supportSlope = 0.0
supportIntercept = 0.0
hasSupport = false

if not na(prevLowPrice) and not na(lastLowPrice) and prevLowBar != lastLowBar
    supportSlope := (lastLowPrice - prevLowPrice) / (lastLowBar - prevLowBar)
    supportIntercept := prevLowPrice - supportSlope * prevLowBar
    hasSupport := supportSlope > 0  // Only ascending lines for support

// Current trendline values
resistanceValue = hasResistance ? resistanceIntercept + resistanceSlope * bar_index : na
supportValue = hasSupport ? supportIntercept + supportSlope * bar_index : na

// ==================== BREAKOUT DETECTION ====================
// Buy signal: Break above resistance + MACD bullish
resistanceBreak = hasResistance and close > resistanceValue and close[1] <= resistanceValue[1]
buySignal = resistanceBreak and macdBullish

// Sell signal: Break below support + MACD bearish
supportBreak = hasSupport and close < supportValue and close[1] >= supportValue[1]
sellSignal = supportBreak and macdBearish

// ==================== SIGNAL MANAGEMENT ====================
// Prevent duplicate signals
var int lastBuyBar = 0
var int lastSellBar = 0

// Valid buy signal (no recent buy)
validBuy = buySignal and (bar_index - lastBuyBar > 10)
if validBuy
    lastBuyBar := bar_index

// Valid sell signal (no recent sell)
validSell = sellSignal and (bar_index - lastSellBar > 10)
if validSell
    lastSellBar := bar_index

// ==================== STOP LOSS CALCULATION ====================
// Calculate stop loss levels on every bar
lowestLow = ta.lowest(low, stopLossLookback)
highestHigh = ta.highest(high, stopLossLookback)

buyStopLoss = lowestLow * (1 - stopLossBuffer / 100)
sellStopLoss = highestHigh * (1 + stopLossBuffer / 100)

// ==================== VISUAL ELEMENTS ====================
// Draw trendlines
var line resistanceLine = na
var line supportLine = na

if showTrendlines
    // Delete old lines
    if not na(resistanceLine)
        line.delete(resistanceLine)
    if not na(supportLine)
        line.delete(supportLine)
    
    // Draw resistance line
    if hasResistance and not na(prevHighBar)
        resistanceLine := line.new(prevHighBar, prevHighPrice, bar_index + trendlineLength, 
             resistanceValue + resistanceSlope * trendlineLength,
             color=color.red, width=2, style=line.style_dashed)
    
    // Draw support line
    if hasSupport and not na(prevLowBar)
        supportLine := line.new(prevLowBar, prevLowPrice, bar_index + trendlineLength, 
             supportValue + supportSlope * trendlineLength,
             color=color.green, width=2, style=line.style_dashed)

// ==================== SIGNAL LABELS ====================
// Buy signal
if validBuy
    buyLabel = label.new(bar_index, low * 0.995,
         text="BUY\n" + str.tostring(close, "#.##"),
         color=color.green,
         style=label.style_label_up,
         textcolor=color.white,
         size=size.normal)
    
    if showStopLoss
        // Stop loss marker
        label.new(bar_index + 5, buyStopLoss,
             text="SL: " + str.tostring(buyStopLoss, "#.##"),
             color=color.red,
             style=label.style_label_left,
             textcolor=color.white,
             size=size.small)
        
        // Stop loss line
        line.new(bar_index, buyStopLoss, bar_index + 20, buyStopLoss,
             color=color.red, width=1, style=line.style_dotted)

// Sell signal
if validSell
    sellLabel = label.new(bar_index, high * 1.005,
         text="SELL\n" + str.tostring(close, "#.##"),
         color=color.red,
         style=label.style_label_down,
         textcolor=color.white,
         size=size.normal)
    
    if showStopLoss
        // Stop loss marker
        label.new(bar_index + 5, sellStopLoss,
             text="SL: " + str.tostring(sellStopLoss, "#.##"),
             color=color.red,
             style=label.style_label_left,
             textcolor=color.white,
             size=size.small)
        
        // Stop loss line
        line.new(bar_index, sellStopLoss, bar_index + 20, sellStopLoss,
             color=color.red, width=1, style=line.style_dotted)

// ==================== MACD ON CHART ====================
// Scale MACD to price chart
priceHigh = ta.highest(high, 50)
priceLow = ta.lowest(low, 50)
priceRange = priceHigh - priceLow
macdMax = ta.highest(math.abs(macdLine), 100)

macdScale = priceRange * 0.1
macdOffset = priceLow - priceRange * 0.15

scaledMacd = showMacdOnChart and macdMax > 0 ? (macdLine / macdMax) * macdScale + macdOffset : na
scaledSignal = showMacdOnChart and macdMax > 0 ? (signalLine / macdMax) * macdScale + macdOffset : na

plot(scaledMacd, "MACD", color=color.new(color.blue, 0), linewidth=2)
plot(scaledSignal, "Signal", color=color.new(color.orange, 0), linewidth=1)

// ==================== INFO PANEL ====================
var table infoPanel = table.new(position.top_right, 2, 5, bgcolor=color.new(color.black, 80), border_width=1)

if barstate.islast
    table.cell(infoPanel, 0, 0, "INDICATOR STATUS", text_color=color.white, text_size=size.small)
    table.merge_cells(infoPanel, 0, 0, 1, 0)
    
    table.cell(infoPanel, 0, 1, "MACD:", text_color=color.gray, text_size=size.tiny)
    table.cell(infoPanel, 1, 1, macdBullish ? "BULLISH" : "BEARISH", 
         text_color=macdBullish ? color.green : color.red, text_size=size.tiny)
    
    table.cell(infoPanel, 0, 2, "Resistance:", text_color=color.gray, text_size=size.tiny)
    table.cell(infoPanel, 1, 2, hasResistance ? str.tostring(resistanceValue, "#.##") : "None", 
         text_color=hasResistance ? color.red : color.gray, text_size=size.tiny)
    
    table.cell(infoPanel, 0, 3, "Support:", text_color=color.gray, text_size=size.tiny)
    table.cell(infoPanel, 1, 3, hasSupport ? str.tostring(supportValue, "#.##") : "None", 
         text_color=hasSupport ? color.green : color.gray, text_size=size.tiny)
    
    table.cell(infoPanel, 0, 4, "Last Swing:", text_color=color.gray, text_size=size.tiny)
    table.cell(infoPanel, 1, 4, not na(lastHighBar) ? str.tostring(bar_index - lastHighBar) + " bars ago" : "None", 
         text_color=color.gray, text_size=size.tiny)

// ==================== DEBUG PLOTS ====================
// Plot swing points for debugging
plotshape(not na(swingHigh), "Swing High", shape.triangledown, location.abovebar, color.red, size=size.tiny)
plotshape(not na(swingLow), "Swing Low", shape.triangleup, location.belowbar, color.green, size=size.tiny)

// ==================== ALERTS ====================
alertcondition(validBuy, "Buy Signal", "Buy signal: Resistance break + MACD bullish at {{close}}")
alertcondition(validSell, "Sell Signal", "Sell signal: Support break + MACD bearish at {{close}}")

// ==================== PLOTS FOR DATA EXPORT ====================
plot(validBuy ? close : na, "Buy Entry", display=display.none)
plot(validSell ? close : na, "Sell Entry", display=display.none)
plot(validBuy ? buyStopLoss : na, "Buy Stop Loss", display=display.none)
plot(validSell ? sellStopLoss : na, "Sell Stop Loss", display=display.none)
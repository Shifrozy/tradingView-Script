//@version=5
indicator("Divergence Breakout Pro â€“ Compact", overlay=true, max_lines_count=200, max_labels_count=200)
osc_type=input.string("MACD","Oscillator",options=["MACD","RSI"])
pivotL=input.int(5,"Pivot Left Bars",minval=1)
pivotR=input.int(5,"Pivot Right Bars",minvagil=1)
stopPct=input.float(0.5,"Stop offset %",minval=0.0)
fastLen=12, slowLen=26, sigLen=9
macd=ta.ema(close,fastLen)-ta.ema(close,slowLen)
macd_sig=ta.ema(macd,sigLen)
macd_hist=macd-macd_sig
rsi=ta.rsi(close,14)
osc=osc_type=="MACD"?macd_hist:rsi
pHigh=ta.pivothigh(high,pivotL,pivotR)
pLow=ta.pivotlow(low,pivotL,pivotR)
oHigh=ta.pivothigh(osc,pivotL,pivotR)
oLow=ta.pivotlow(osc,pivotL,pivotR)
var line bullLine=na
var line bearLine=na
bullDiv=not na(pLow) and not na(oLow) and low[pivotR]<low[pivotR+pivotL+pivotR] and osc[pivotR]>osc[pivotR+pivotL+pivotR]
if bullDiv
    if not na(bullLine)
        line.delete(bullLine)
    bullLine:=line.new(int(bar_index-pivotR*2-pivotL),low[pivotR+pivotL+pivotR],int(bar_index-pivotR),low[pivotR],xloc=xloc.bar_index,extend=extend.right,color=color.green,style=line.style_dotted,width=2)
    label.new(int(bar_index-pivotR),low[pivotR],"Bull Div ðŸŸ¢",style=label.style_label_up,color=color.green,textcolor=color.white)
bearDiv=not na(pHigh) and not na(oHigh) and high[pivotR]>high[pivotR+pivotL+pivotR] and osc[pivotR]<osc[pivotR+pivotL+pivotR]
if bearDiv
    if not na(bearLine)
        line.delete(bearLine)
    bearLine:=line.new(int(bar_index-pivotR*2-pivotL),high[pivotR+pivotL+pivotR],int(bar_index-pivotR),high[pivotR],xloc=xloc.bar_index,extend=extend.right,color=color.red,style=line.style_dotted,width=2)
    label.new(int(bar_index-pivotR),high[pivotR],"Bear Div ðŸ”´",style=label.style_label_down,color=color.red,textcolor=color.white)
bullLineY=na(bullLine)?na:line.get_price(bullLine,bar_index)
bearLineY=na(bearLine)?na:line.get_price(bearLine,bar_index)
bullEntry=not na(bullLineY) and close>bullLineY
bearEntry=not na(bearLineY) and close<bearLineY
var float stopLvl=na
if bullEntry
    label.new(bar_index,close,"ðŸŸ¢ BUY ENTRY",color=color.green,textcolor=color.white,style=label.style_label_up,size=size.large)
    stopLvl:=low[pivotR]*(1-stopPct/100)
    line.new(int(bar_index),stopLvl,int(bar_index+20),stopLvl,style=line.style_dashed,color=color.red,width=2,extend=extend.right)
    label.new(bar_index,stopLvl,"â›” STOP LOSS",style=label.style_label_down,color=color.red,textcolor=color.white)
if bearEntry
    label.new(bar_index,close,"ðŸ”´ SHORT ENTRY",color=color.red,textcolor=color.white,style=label.style_label_down,size=size.large)
    stopLvl:=high[pivotR]*(1+stopPct/100)
    line.new(int(bar_index),stopLvl,int(bar_index+20),stopLvl,style=line.style_dashed,color=color.green,width=2,extend=extend.right)
    label.new(bar_index,stopLvl,"â›” STOP LOSS",style=label.style_label_up,color=color.green,textcolor=color.white)
alertcondition(bullEntry,"Bullish Breakout + Divergence","ðŸŸ¢ BUY: {{ticker}} @ {{close}} STOP: "+str.tostring(stopLvl,format.mintick))
alertcondition(bearEntry,"Bearish Breakdown + Divergence","ðŸ”´ SHORT: {{ticker}} @ {{close}} STOP: "+str.tostring(stopLvl,format.mintick))
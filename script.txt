//@version=6
indicator("Trendline Breakout + Buy/Stop Pro", overlay=true, max_lines_count=50, max_labels_count=50)

// ðŸ”§ Inputs
lookbackBars     = input.int(200, "Lookback Bars", minval=50)
swingLeft        = input.int(3, "Swing Left", minval=1)
swingRight       = input.int(3, "Swing Right", minval=1)
minBetweenSwings = input.int(3, "Minimum bars between swings", minval=1)

breakoutBufPct   = input.float(0.0, "Breakout Buffer (%)", step=0.1)
breakBodyReq     = input.bool(true, "Require Bullish Candle Body")

stopLookbackBars = input.int(20, "Stop Lookback Bars", minval=5)
stopOffsetPct    = input.float(0.0, "Stop Offset %", step=0.1)

colTrendline     = input.color(color.blue, "Trendline Color")
colBuyLabel      = input.color(color.green, "Buy Label Color")
colStopLine      = input.color(color.red, "Stop Line Color")

// ðŸ“Š Swing Detection
swingHighCond = ta.pivothigh(high, swingLeft, swingRight)
swingLowCond  = ta.pivotlow(low, swingLeft, swingRight)

var swingHighBars = array.new_int()
var swingHighVals = array.new_float()
if not na(swingHighCond)
    array.push(swingHighBars, bar_index - swingRight)
    array.push(swingHighVals, high[swingRight])
    if array.size(swingHighBars) > 20
        array.shift(swingHighBars), array.shift(swingHighVals)

var swingLowBars = array.new_int()
var swingLowVals = array.new_float()
if not na(swingLowCond)
    array.push(swingLowBars, bar_index - swingRight)
    array.push(swingLowVals, low[swingRight])
    if array.size(swingLowBars) > 20
        array.shift(swingLowBars), array.shift(swingLowVals)

// ðŸ“ˆ Trendline Logic
var line trendline   = na
var int lastBar1     = na
var int lastBar2     = na
var float lastY1     = na
var float lastY2     = na

if array.size(swingHighBars) >= 2
    b2 = array.get(swingHighBars, array.size(swingHighBars)-1)
    b1 = array.get(swingHighBars, array.size(swingHighBars)-2)
    y2 = array.get(swingHighVals, array.size(swingHighVals)-1)
    y1 = array.get(swingHighVals, array.size(swingHighVals)-2)
    if b2 - b1 >= minBetweenSwings and y2 < y1
        lastBar1 := b1
        lastBar2 := b2
        lastY1   := y1
        lastY2   := y2
        if na(trendline)
            trendline := line.new(lastBar1,lastY1,lastBar2,lastY2,xloc=xloc.bar_index,color=colTrendline,style=line.style_dotted,width=2,extend=extend.right)
        else
            line.set_xy1(trendline,lastBar1,lastY1)
            line.set_xy2(trendline,lastBar2,lastY2)

// compute trendline y at current bar
float tl_y = na
if not na(lastBar1) and not na(lastBar2) and bar_index >= lastBar2
    slope = (lastY2 - lastY1) / (lastBar2 - lastBar1)
    tl_y := lastY2 + slope * (bar_index - lastBar2)

// ðŸš¦ Buy Entry
buySignal  = not na(tl_y) and close > tl_y*(1+breakoutBufPct/100) and (not breakBodyReq or close>open)
buyTrigger = ta.change(buySignal) and buySignal

// ðŸŽ¯ Labels and Stop
var label buyLabel  = na
var line stopLine   = na
var label stopLabel = na

if buyTrigger
    if not na(buyLabel)
        label.delete(buyLabel)
    if not na(stopLine)
        line.delete(stopLine)
    if not na(stopLabel)
        label.delete(stopLabel)

    buyLabel := label.new(bar_index, close, "Buy Entry Point", style=label.style_label_up, textcolor=color.white, color=colBuyLabel, size=size.large)

    // Stop loss: most recent swing low
    float stopPrice = na   // <-- declare here per trigger, no conflict
    for i = array.size(swingLowBars)-1 to 0
        bi = array.get(swingLowBars,i)
        if bar_index - bi <= stopLookbackBars
            stopPrice := array.get(swingLowVals,i)
            break
    if not na(stopPrice)
        stopPrice := stopPrice * (1 - stopOffsetPct/100)
        stopLine  := line.new(bar_index, stopPrice, bar_index+20, stopPrice, xloc=xloc.bar_index, extend=extend.right, style=line.style_dashed, color=colStopLine, width=2)
        stopLabel := label.new(bar_index, stopPrice, "Stop Loss Here", style=label.style_label_down, textcolor=color.white, color=colStopLine)
//@version=6
indicator("MACD Divergence Trendline Breakout", overlay=true, max_lines_count=50, max_labels_count=50)

// 🔧 Inputs
leftBars   = input.int(5,"Pivot Left",minval=1)
rightBars  = input.int(5,"Pivot Right",minval=1)
stopLookback = input.int(20,"Stop Lookback Bars",minval=5)
stopOffset   = input.float(0.0,"Stop Offset %",step=0.1)

// 🎨 Colors
colBull   = input.color(color.green,"Bullish Line")
colBear   = input.color(color.red,"Bearish Line")

// 📊 MACD
fastLen = input.int(12,"MACD Fast Length")
slowLen = input.int(26,"MACD Slow Length")
sigLen  = input.int(9,"MACD Signal Length")

macdLine   = ta.ema(close,fastLen) - ta.ema(close,slowLen)
macdSignal = ta.ema(macdLine,sigLen)
macdHist   = macdLine - macdSignal

// ────────────────
// 🔍 Find Pivots
// ────────────────
pHigh = ta.pivothigh(high,leftBars,rightBars)
pLow  = ta.pivotlow(low,leftBars,rightBars)
mHigh = ta.pivothigh(macdHist,leftBars,rightBars)
mLow  = ta.pivotlow(macdHist,leftBars,rightBars)

// ────────────────
// 📈 Detect Divergence (keep latest only)
// ────────────────
var line bullLine = na
var line bearLine = na

// Bullish divergence
if not na(pLow) and not na(mLow)
    if low[rightBars] < low[rightBars+leftBars+rightBars] and macdHist[rightBars] > macdHist[rightBars+leftBars+rightBars]
        if not na(bullLine)
            line.delete(bullLine)
        bullLine := line.new(bar_index-(rightBars*2+leftBars), low[rightBars+leftBars+rightBars],
                             bar_index-rightBars, low[rightBars],
                             xloc=xloc.bar_index, extend=extend.right,
                             color=colBull, style=line.style_dotted, width=2)

// Bearish divergence
if not na(pHigh) and not na(mHigh)
    if high[rightBars] > high[rightBars+leftBars+rightBars] and macdHist[rightBars] < macdHist[rightBars+leftBars+rightBars]
        if not na(bearLine)
            line.delete(bearLine)
        bearLine := line.new(bar_index-(rightBars*2+leftBars), high[rightBars+leftBars+rightBars],
                             bar_index-rightBars, high[rightBars],
                             xloc=xloc.bar_index, extend=extend.right,
                             color=colBear, style=line.style_dotted, width=2)

// ────────────────
// 🚦 Entry Logic
// ────────────────
bullLineY = na(bullLine) ? na : line.get_price(bullLine, bar_index)
bearLineY = na(bearLine) ? na : line.get_price(bearLine, bar_index)

bullEntry = not na(bullLineY) and close > bullLineY
bearEntry = not na(bearLineY) and close < bearLineY

// Always compute stops for stability
lowestStop  = ta.lowest(low, stopLookback)
highestStop = ta.highest(high, stopLookback)

// 🟢 BUY signal
if ta.change(bullEntry) and bullEntry
    label.new(bar_index, close, "🟢 BUY", style=label.style_label_up, size=size.large,
              color=colBull, textcolor=color.white)
    stopPrice = lowestStop*(1-stopOffset/100)
    line.new(bar_index, stopPrice, bar_index+20, stopPrice,
             xloc=xloc.bar_index, extend=extend.right,
             style=line.style_dashed, color=colBear, width=2)
    label.new(bar_index+1, stopPrice, "⛔ STOP", style=label.style_label_left,
              color=colBear, textcolor=color.white)

// 🔴 SELL signal
if ta.change(bearEntry) and bearEntry
    label.new(bar_index, close, "🔴 SELL", style=label.style_label_down, size=size.large,
              color=colBear, textcolor=color.white)
    stopPrice = highestStop*(1+stopOffset/100)
    line.new(bar_index, stopPrice, bar_index+20, stopPrice,
             xloc=xloc.bar_index, extend=extend.right,
             style=line.style_dashed, color=colBull, width=2)
    label.new(bar_index+1, stopPrice, "⛔ STOP", style=label.style_label_left,
              color=colBull, textcolor=color.white)

// ────────────────
// 📉 MACD Panel
// ────────────────
plot(macdLine,   "MACD",   color=color.blue)
plot(macdSignal, "Signal", color=color.orange)
plot(macdHist,   "Histogram", style=plot.style_columns,
     color=macdHist>=0?color.green:color.red)
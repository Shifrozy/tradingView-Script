//@version=6
indicator("Smart Trendline Breakout", shorttitle="TrendBreak", overlay=true)

pivotBars = input.int(5, "Pivot Bars", minval=3)
profitTarget = input.float(10.0, "Profit Target %", minval=1.0, step=0.5) / 100

lowest5 = ta.lowest(low, 5)
highest5 = ta.highest(high, 5)

swingHigh = ta.pivothigh(high, pivotBars, pivotBars)
swingLow = ta.pivotlow(low, pivotBars, pivotBars)

var int upTrendTime1 = na
var float upTrendPrice1 = na
var int upTrendTime2 = na
var float upTrendPrice2 = na
var int downTrendTime1 = na
var float downTrendPrice1 = na
var int downTrendTime2 = na
var float downTrendPrice2 = na

if not na(swingLow)
    currentLow = low[pivotBars]
    currentTime = time[pivotBars]
    if na(upTrendTime1)
        upTrendTime1 := currentTime
        upTrendPrice1 := currentLow
    else if na(upTrendTime2)
        upTrendTime2 := currentTime
        upTrendPrice2 := currentLow
    else if currentLow > upTrendPrice2
        upTrendTime1 := upTrendTime2
        upTrendPrice1 := upTrendPrice2
        upTrendTime2 := currentTime
        upTrendPrice2 := currentLow

if not na(swingHigh)
    currentHigh = high[pivotBars]
    currentTime = time[pivotBars]
    if na(downTrendTime1)
        downTrendTime1 := currentTime
        downTrendPrice1 := currentHigh
    else if na(downTrendTime2)
        downTrendTime2 := currentTime
        downTrendPrice2 := currentHigh
    else if currentHigh < downTrendPrice2
        downTrendTime1 := downTrendTime2
        downTrendPrice1 := downTrendPrice2
        downTrendTime2 := currentTime
        downTrendPrice2 := currentHigh

var line upTrendLine = na
var line downTrendLine = na

if not na(upTrendTime1) and not na(upTrendTime2)
    if not na(upTrendLine)
        line.delete(upTrendLine)
    upTrendLine := line.new(upTrendTime1, upTrendPrice1, upTrendTime2, upTrendPrice2, color=color.blue, style=line.style_solid, width=2)

if not na(downTrendTime1) and not na(downTrendTime2)
    if not na(downTrendLine)
        line.delete(downTrendLine)
    downTrendLine := line.new(downTrendTime1, downTrendPrice1, downTrendTime2, downTrendPrice2, color=color.orange, style=line.style_solid, width=2)

bullishBreakout = false
bearishBreakout = false

if not na(downTrendLine)
    resistancePrice = line.get_price(downTrendLine, time)
    bullishBreakout := not na(resistancePrice) and close > resistancePrice

if not na(upTrendLine)
    supportPrice = line.get_price(upTrendLine, time)
    bearishBreakout := not na(supportPrice) and close < supportPrice

var label buySignal = na
var label sellSignal = na
var line buyStopLine = na
var line buyTargetLine = na
var line sellStopLine = na
var line sellTargetLine = na

if bullishBreakout
    if not na(buySignal)
        label.delete(buySignal)
    if not na(buyStopLine)
        line.delete(buyStopLine)
    if not na(buyTargetLine)
        line.delete(buyTargetLine)
    
    entryPrice = close
    stopLoss = lowest5
    targetPrice = entryPrice * (1 + profitTarget)
    
    buySignal := label.new(bar_index, low, text="BUY", color=color.lime, textcolor=color.black, style=label.style_label_up, size=size.normal)
    buyStopLine := line.new(bar_index, stopLoss, bar_index + 10, stopLoss, color=color.red, style=line.style_dashed, width=2)
    buyTargetLine := line.new(bar_index, targetPrice, bar_index + 10, targetPrice, color=color.green, style=line.style_dashed, width=2)

if bearishBreakout
    if not na(sellSignal)
        label.delete(sellSignal)
    if not na(sellStopLine)
        line.delete(sellStopLine)
    if not na(sellTargetLine)
        line.delete(sellTargetLine)
    
    entryPrice = close
    stopLoss = highest5
    targetPrice = entryPrice * (1 - profitTarget)
    
    sellSignal := label.new(bar_index, high, text="SELL", color=color.red, textcolor=color.white, style=label.style_label_down, size=size.normal)
    sellStopLine := line.new(bar_index, stopLoss, bar_index + 10, stopLoss, color=color.red, style=line.style_dashed, width=2)
    sellTargetLine := line.new(bar_index, targetPrice, bar_index + 10, targetPrice, color=color.green, style=line.style_dashed, width=2)

var line driveLine = na
if barstate.islast
    if not na(driveLine)
        line.delete(driveLine)
    currentTrend = close > open ? "UP" : "DOWN"
    driveColor = currentTrend == "UP" ? color.teal : color.purple
    projectionPrice = currentTrend == "UP" ? close * 1.02 : close * 0.98
    driveLine := line.new(bar_index, close, bar_index + 5, projectionPrice, color=driveColor, style=line.style_dotted, width=1)

if not na(buyStopLine) and bar_index - line.get_x1(buyStopLine) > 20
    line.delete(buyStopLine)
    buyStopLine := na
if not na(buyTargetLine) and bar_index - line.get_x1(buyTargetLine) > 20
    line.delete(buyTargetLine)
    buyTargetLine := na
if not na(sellStopLine) and bar_index - line.get_x1(sellStopLine) > 20
    line.delete(sellStopLine)
    sellStopLine := na
if not na(sellTargetLine) and bar_index - line.get_x1(sellTargetLine) > 20
    line.delete(sellTargetLine)
    sellTargetLine := na

bgcolor(bullishBreakout ? color.new(color.lime, 90) : bearishBreakout ? color.new(color.red, 90) : na)

plotshape(bullishBreakout, style=shape.triangleup, location=location.belowbar, color=color.lime, size=size.normal)
plotshape(bearishBreakout, style=shape.triangledown, location=location.abovebar, color=color.red, size=size.normal)

alertcondition(bullishBreakout, title="Bullish Breakout")
alertcondition(bearishBreakout, title="Bearish Breakout")

if bullishBreakout
    alert("BUY BREAKOUT - Price: " + str.tostring(close), alert.freq_once_per_bar)

if bearishBreakout
    alert("SELL BREAKOUT - Price: " + str.tostring(close), alert.freq_once_per_bar)

if barstate.islast
    label.new(bar_index, high * 1.01, text="TRENDLINE BREAKOUT", color=color.new(color.blue, 90), textcolor=color.white, style=label.style_label_center, size=size.small)
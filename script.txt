//@version=6
indicator("Complete Trendline + MACD Divergence System", overlay=true, max_lines_count=500, max_labels_count=500)

// ==================== USER INPUTS ====================
// MACD Settings
macdFastLength = input.int(12, "MACD Fast Length", minval=1, group="MACD Settings")
macdSlowLength = input.int(26, "MACD Slow Length", minval=1, group="MACD Settings")
macdSignalLength = input.int(9, "MACD Signal Length", minval=1, group="MACD Settings")

// Trendline Settings
swingPeriod = input.int(5, "Swing Detection Period", minval=2, maxval=20, group="Trendline Settings")
trendlineLength = input.int(50, "Trendline Extension Length", minval=10, group="Trendline Settings")

// Divergence Settings
divergenceLookback = input.int(40, "Divergence Lookback Period", minval=10, group="Divergence Settings")
showDivergences = input.bool(true, "Show Divergences", group="Divergence Settings")
divergenceLineWidth = input.int(2, "Divergence Line Width", minval=1, maxval=5, group="Divergence Settings")

// Risk Management
stopLossBuffer = input.float(0.2, "Stop Loss Buffer %", minval=0.1, step=0.1, group="Risk Management")
stopLossLookback = input.int(10, "Stop Loss Lookback Bars", minval=5, group="Risk Management")

// Visual Settings
showTrendlines = input.bool(true, "Show Trendlines", group="Visual Settings")
showMacdPanel = input.bool(true, "Show MACD Panel", group="Visual Settings")
showStopLoss = input.bool(true, "Show Stop Loss Levels", group="Visual Settings")

// Colors
bullDivColor = input.color(color.new(color.green, 0), "Bullish Divergence Color", group="Colors")
bearDivColor = input.color(color.new(color.red, 0), "Bearish Divergence Color", group="Colors")
trendlineResColor = input.color(color.new(color.red, 30), "Resistance Trendline Color", group="Colors")
trendlineSupColor = input.color(color.new(color.blue, 30), "Support Trendline Color", group="Colors")

// ==================== MACD CALCULATION ====================
[macdLine, signalLine, histogram] = ta.macd(close, macdFastLength, macdSlowLength, macdSignalLength)
macdBullish = macdLine > signalLine
macdBearish = macdLine < signalLine

// ==================== SWING DETECTION ====================
priceSwingHigh = ta.pivothigh(high, swingPeriod, swingPeriod)
priceSwingLow = ta.pivotlow(low, swingPeriod, swingPeriod)

// Variables for trendlines
var float lastHighPrice = na
var int lastHighBar = na
var float prevHighPrice = na
var int prevHighBar = na

var float lastLowPrice = na
var int lastLowBar = na
var float prevLowPrice = na
var int prevLowBar = na

// Update swing highs
if not na(priceSwingHigh)
    prevHighPrice := lastHighPrice
    prevHighBar := lastHighBar
    lastHighPrice := priceSwingHigh
    lastHighBar := bar_index - swingPeriod

// Update swing lows
if not na(priceSwingLow)
    prevLowPrice := lastLowPrice
    prevLowBar := lastLowBar
    lastLowPrice := priceSwingLow
    lastLowBar := bar_index - swingPeriod

// ==================== DIVERGENCE DETECTION ====================
// Variables for divergence
var float priceLow1 = na
var float priceLow2 = na
var int priceLowBar1 = na
var int priceLowBar2 = na
var float priceHigh1 = na
var float priceHigh2 = na
var int priceHighBar1 = na
var int priceHighBar2 = na

// Update price lows for divergence
if not na(priceSwingLow)
    priceLow2 := priceLow1
    priceLowBar2 := priceLowBar1
    priceLow1 := priceSwingLow
    priceLowBar1 := bar_index - swingPeriod

// Update price highs for divergence
if not na(priceSwingHigh)
    priceHigh2 := priceHigh1
    priceHighBar2 := priceHighBar1
    priceHigh1 := priceSwingHigh
    priceHighBar1 := bar_index - swingPeriod

// MACD values at swing points
macdAtLow1 = not na(priceLowBar1) ? macdLine[bar_index - priceLowBar1] : na
macdAtLow2 = not na(priceLowBar2) ? macdLine[bar_index - priceLowBar2] : na
macdAtHigh1 = not na(priceHighBar1) ? macdLine[bar_index - priceHighBar1] : na
macdAtHigh2 = not na(priceHighBar2) ? macdLine[bar_index - priceHighBar2] : na

// Check for divergences
bullishDiv = not na(priceLow1) and not na(priceLow2) and not na(macdAtLow1) and not na(macdAtLow2) and
             priceLow1 < priceLow2 and macdAtLow1 > macdAtLow2 and
             bar_index - priceLowBar1 <= divergenceLookback

bearishDiv = not na(priceHigh1) and not na(priceHigh2) and not na(macdAtHigh1) and not na(macdAtHigh2) and
             priceHigh1 > priceHigh2 and macdAtHigh1 < macdAtHigh2 and
             bar_index - priceHighBar1 <= divergenceLookback

// ==================== TRENDLINE CALCULATION ====================
// Resistance trendline
resistanceSlope = 0.0
resistanceIntercept = 0.0
hasResistance = false

if not na(prevHighPrice) and not na(lastHighPrice) and prevHighBar != lastHighBar
    resistanceSlope := (lastHighPrice - prevHighPrice) / (lastHighBar - prevHighBar)
    resistanceIntercept := prevHighPrice - resistanceSlope * prevHighBar
    hasResistance := resistanceSlope < 0

// Support trendline
supportSlope = 0.0
supportIntercept = 0.0
hasSupport = false

if not na(prevLowPrice) and not na(lastLowPrice) and prevLowBar != lastLowBar
    supportSlope := (lastLowPrice - prevLowPrice) / (lastLowBar - prevLowBar)
    supportIntercept := prevLowPrice - supportSlope * prevLowBar
    hasSupport := supportSlope > 0

// Current trendline values
resistanceValue = hasResistance ? resistanceIntercept + resistanceSlope * bar_index : na
supportValue = hasSupport ? supportIntercept + supportSlope * bar_index : na

// ==================== BREAKOUT DETECTION ====================
resistanceBreak = hasResistance and close > resistanceValue and close[1] <= resistanceValue[1]
supportBreak = hasSupport and close < supportValue and close[1] >= supportValue[1]

buySignal = resistanceBreak and macdBullish
sellSignal = supportBreak and macdBearish

// Signal management
var int lastBuyBar = 0
var int lastSellBar = 0

validBuy = buySignal and (bar_index - lastBuyBar > 10)
if validBuy
    lastBuyBar := bar_index

validSell = sellSignal and (bar_index - lastSellBar > 10)
if validSell
    lastSellBar := bar_index

// ==================== STOP LOSS CALCULATION ====================
lowestLow = ta.lowest(low, stopLossLookback)
highestHigh = ta.highest(high, stopLossLookback)

buyStopLoss = lowestLow * (1 - stopLossBuffer / 100)
sellStopLoss = highestHigh * (1 + stopLossBuffer / 100)

// ==================== VISUAL ELEMENTS ====================
// Draw trendlines
var line resistanceLine = na
var line supportLine = na

if showTrendlines
    if not na(resistanceLine)
        line.delete(resistanceLine)
    if not na(supportLine)
        line.delete(supportLine)
    
    if hasResistance and not na(prevHighBar)
        resistanceLine := line.new(prevHighBar, prevHighPrice, bar_index + trendlineLength, 
             resistanceValue + resistanceSlope * trendlineLength,
             color=trendlineResColor, width=2, style=line.style_dashed)
    
    if hasSupport and not na(prevLowBar)
        supportLine := line.new(prevLowBar, prevLowPrice, bar_index + trendlineLength, 
             supportValue + supportSlope * trendlineLength,
             color=trendlineSupColor, width=2, style=line.style_dashed)

// Draw divergences on price chart
if showDivergences
    if bullishDiv and bar_index - priceLowBar1 <= 5
        line.new(priceLowBar2, priceLow2, priceLowBar1, priceLow1,
             color=bullDivColor, width=divergenceLineWidth, style=line.style_solid)
        
        label.new(priceLowBar1, priceLow1 * 0.995,
             text="BULL DIV",
             color=bullDivColor,
             style=label.style_label_up,
             textcolor=color.white,
             size=size.small)
    
    if bearishDiv and bar_index - priceHighBar1 <= 5
        line.new(priceHighBar2, priceHigh2, priceHighBar1, priceHigh1,
             color=bearDivColor, width=divergenceLineWidth, style=line.style_solid)
        
        label.new(priceHighBar1, priceHigh1 * 1.005,
             text="BEAR DIV",
             color=bearDivColor,
             style=label.style_label_down,
             textcolor=color.white,
             size=size.small)

// Buy/Sell signals
if validBuy
    label.new(bar_index, low * 0.995,
         text="BUY\n" + str.tostring(close, "#.##"),
         color=color.green,
         style=label.style_label_up,
         textcolor=color.white,
         size=size.normal)
    
    if showStopLoss
        label.new(bar_index + 5, buyStopLoss,
             text="SL: " + str.tostring(buyStopLoss, "#.##"),
             color=color.red,
             style=label.style_label_left,
             textcolor=color.white,
             size=size.small)
        
        line.new(bar_index, buyStopLoss, bar_index + 20, buyStopLoss,
             color=color.red, width=1, style=line.style_dotted)

if validSell
    label.new(bar_index, high * 1.005,
         text="SELL\n" + str.tostring(close, "#.##"),
         color=color.red,
         style=label.style_label_down,
         textcolor=color.white,
         size=size.normal)
    
    if showStopLoss
        label.new(bar_index + 5, sellStopLoss,
             text="SL: " + str.tostring(sellStopLoss, "#.##"),
             color=color.red,
             style=label.style_label_left,
             textcolor=color.white,
             size=size.small)
        
        line.new(bar_index, sellStopLoss, bar_index + 20, sellStopLoss,
             color=color.red, width=1, style=line.style_dotted)

// ==================== MACD PANEL ====================
// Create MACD panel below price
macdPanelHeight = ta.highest(high, 50) - ta.lowest(low, 50)
macdPanelBottom = ta.lowest(low, 50) - macdPanelHeight * 0.3
macdScale = macdPanelHeight * 0.2 / ta.highest(math.abs(macdLine), 50)

scaledMacd = showMacdPanel ? macdLine * macdScale + macdPanelBottom : na
scaledSignal = showMacdPanel ? signalLine * macdScale + macdPanelBottom : na
zeroLine = showMacdPanel ? macdPanelBottom : na

// Plot MACD
plot(scaledMacd, "MACD", color=color.blue, linewidth=2)
plot(scaledSignal, "Signal", color=color.orange, linewidth=1)
plot(zeroLine, "Zero", color=color.gray, linewidth=1, style=plot.style_line)

// Draw divergences on MACD
if showDivergences and showMacdPanel
    if bullishDiv and bar_index - priceLowBar1 <= 5
        macdY1 = macdAtLow1 * macdScale + macdPanelBottom
        macdY2 = macdAtLow2 * macdScale + macdPanelBottom
        line.new(priceLowBar2, macdY2, priceLowBar1, macdY1,
             color=bullDivColor, width=divergenceLineWidth, style=line.style_dotted)
    
    if bearishDiv and bar_index - priceHighBar1 <= 5
        macdY1 = macdAtHigh1 * macdScale + macdPanelBottom
        macdY2 = macdAtHigh2 * macdScale + macdPanelBottom
        line.new(priceHighBar2, macdY2, priceHighBar1, macdY1,
             color=bearDivColor, width=divergenceLineWidth, style=line.style_dotted)

// Swing markers
plotshape(not na(priceSwingHigh), "Swing High", shape.triangledown, location.abovebar, color.red, size=size.tiny)
plotshape(not na(priceSwingLow), "Swing Low", shape.triangleup, location.belowbar, color.green, size=size.tiny)

// Alerts
alertcondition(validBuy, "Buy Signal", "Buy signal triggered")
alertcondition(validSell, "Sell Signal", "Sell signal triggered")
alertcondition(bullishDiv, "Bullish Divergence", "Bullish divergence detected")
alertcondition(bearishDiv, "Bearish Divergence", "Bearish divergence detected")